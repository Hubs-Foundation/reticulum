name: ret
on:
  push:
    branches:
    paths-ignore: ["README.md"]
  workflow_dispatch:

jobs:
  turkeyGitops:
    uses: mozilla/hubs-ops/.github/workflows/turkeyGitops.yml@master
    with:
      registry: mozillareality
      dockerfile: TurkeyDockerfile
    secrets:
      DOCKER_HUB_PWD: ${{ secrets.DOCKER_HUB_PWD }}


# name: ret
# on:
#   push:
#     paths-ignore: ["README.md"]
#   workflow_dispatch:

# env:
#   registryName: mozillareality
#   containerName: ret

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout-ret
#         uses: actions/checkout@v2
#         with:
#           path: "./ret"
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#         with:
#           install: true
#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ env.registryName }}
#           password: ${{ secrets.DOCKER_HUB_PWD }}
#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: ret/
#           file: ret/TurkeyDockerfile
#           tags: ${{ env.registryName }}/${{ env.containerName }}:${{ github.run_number }}
#           # cache-from: type=gha
#           # cache-to: type=gha,mode=max
#           cache-from: type=registry,ref=${{ env.registryName }}/${{ env.containerName }}:buildcache
#           cache-to: type=registry,ref=${{ env.registryName }}/${{ env.containerName }}:buildcache,mode=max
#           push: true

#   promote:
#     if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod'
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: promote artifact
#         run: |
#           fromTag=${{ env.registryName }}/${{ env.containerName }}:${{ github.run_number }}
#           toTag=${{ env.registryName }}/${{ env.containerName }}:${GITHUB_REF/'refs/heads/'/}          
#           toTag=${toTag//:master/:dev}
#           echo "promoting :$fromTag to :$toTag"
#           echo ${{ secrets.DOCKER_HUB_PWD }} | sudo docker login --username $registryName --password-stdin
#           docker pull $fromTag && docker tag $fromTag $toTag && sudo docker push $toTag

#   staging_pr_to_prod:
#     if: github.ref == 'refs/heads/staging'
#     runs-on: ubuntu-latest
#     needs: promote
#     steps:
#       - name: checkout-hubs
#         uses: actions/checkout@v2
#         with:
#           path: ./hubs_staging
#       - name: create pr for staging -> prod
#         run: |
#           cd ./hubs_staging
#           GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} gh pr create -H staging -B prod -a tanfarming --title "releasing" --body "note: merge this PR == production release"

#   prod_cut_release_branch:
#     if: github.ref == 'refs/heads/prod'
#     runs-on: ubuntu-latest
#     needs: promote
#     steps:
#       - name: checkout-hubs
#         uses: actions/checkout@v2
#         with:
#           path: ./hubs_prod
#       - name: cut release branch for prod
#         run: |
#           cd ./hubs_prod
#           branchName="releases/$(date '+%y%m%d').$GITHUB_RUN_NUMBER"
#           git checkout -b $branchName && git push origin $branchName
